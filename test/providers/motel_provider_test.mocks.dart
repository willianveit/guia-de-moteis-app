// Mocks generated by Mockito 5.4.5 from annotations
// in guia_de_moteis_app/test/providers/motel_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:guia_de_moteis_app/models/motel.dart' as _i6;
import 'package:guia_de_moteis_app/services/motel_service.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MotelService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMotelService extends _i1.Mock implements _i3.MotelService {
  @override
  String get apiUrl =>
      (super.noSuchMethod(
            Invocation.getter(#apiUrl),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#apiUrl),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#apiUrl),
            ),
          )
          as String);

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i2.Client);

  @override
  _i5.Future<List<_i6.Motel>> getMotels() =>
      (super.noSuchMethod(
            Invocation.method(#getMotels, []),
            returnValue: _i5.Future<List<_i6.Motel>>.value(<_i6.Motel>[]),
            returnValueForMissingStub: _i5.Future<List<_i6.Motel>>.value(
              <_i6.Motel>[],
            ),
          )
          as _i5.Future<List<_i6.Motel>>);
}
